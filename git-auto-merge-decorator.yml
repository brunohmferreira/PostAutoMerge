steps:
- ${{ if and(eq(variables['Decorator.GitAutoMerge.Enabled'], True), eq(variables['System.StageDisplayName'], 'PRD')) }}:
  - task: PowerShell@2
    displayName: 'Clone repository [Git: Auto Merge](injected from decorator)'
    inputs:
      workingDirectory: '$(System.DefaultWorkingDirectory)'
      targetType: 'inline'
      script: |
        echo "before cloning"
        dir

        mkdir _git
        cd _git
        echo "after create _git folder"
        dir

        $RepoPartialUri = "$(System.TeamFoundationCollectionUri)$(System.TeamProject)/_git/$(Build.Repository.Name)".SubString(8)
        echo "Repositorio https://$RepoPartialUri"

        git clone "https://$(System.AccessToken)@$RepoPartialUri"

        cd $(Build.Repository.Name)
        echo "Cloned, Working Dir changed for '$(Build.Repository.Name)'"

  - task: PowerShell@2
    displayName: 'Auto merge [Git: Auto Merge](injected from decorator)'
    inputs:
      workingDirectory: '$(System.DefaultWorkingDirectory)'
      targetType: 'inline'
      script: |
        dir
        
        cd _git
        cd $(Build.Repository.Name)

        git checkout master
        echo "merging on master branch with commit $(Build.SourceVersion)"

        $mergeParams = "--ff-only"
        git merge $(Build.SourceVersion) $mergeParams.Split(" ")
        if(-not $?){
          echo "##[error] Merge incomplete, aborting"
          echo "##vso[task.logissue type=error] Fail to merge from $(Build.SourceBranchName) to master"
          echo "##vso[task.logissue type=error] Your branch is outdated in relation to the master branch, that is, you are trying to remove some commits already published in production. Update your branch with master."
          exit 1
        }

        echo "no conflicts, merge done"

        git push

        if($?){
          echo "master updated with success"
        }
        else
        {
          echo "##vso[task.logissue type=error] Fail to push master branch after merge from $(Build.SourceBranchName)"
          echo "##vso[task.logissue type=error] There is a problem in your branch, which does not allow the completion of git push."
          exit 1
        }

  - task: PowerShell@2
    displayName: 'Clean folder [Git: Auto Merge](injected from decorator)'
    condition: succeededOrFailed()
    inputs:
      workingDirectory: '$(System.DefaultWorkingDirectory)'
      targetType: 'inline'
      script: |
        echo "before cleaning"
        dir

        if ('$(Agent.OS)' -eq 'Linux')
        {
          echo "Removing folder in Linux"
          rm -rf _git
        }
        else
        {
          echo "Removing folder in Windows"
          rm -r -force _git
        }

        echo "after cleaning"
        dir